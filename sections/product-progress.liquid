{% comment %}
---------------------------------------------------------
Copyright Â© 2024 Ecomify Theme. All rights reserved.
Unauthorized copying, modification, distribution, or use
of this code or any portion of it, is strictly prohibited.
Violators will be prosecuted to the fullest extent of the law.
---------------------------------------------------------
{% endcomment %}

{% liquid 
    assign pt = section.settings.pt | prepend: 'pt-'
    assign pb = section.settings.pb | prepend: 'pb-'
    assign mt = section.settings.mt | prepend: 'mt-'
    assign mb = section.settings.mb | prepend: 'mb-'

    assign bg_color = section.settings.bg_color

    if section.settings.bg_gradient
        assign bg_color = bg_color | append: ' bg-gradient'
    endif

      if customer
        assign show_section = section.settings.access_members
    else
        assign show_section = section.settings.access_guests
    endif
%}
{% if show_section %}
<section 
    id="product-progress-{{ section.id }}" 
    class="product-progress enter-view overflow-hidden {{ bg_color }} {{ pt }} {{ pb }} {{ mt }} {{ mb }}">
    <div class="{{ section.settings.container }}" style="max-width: {{ section.settings.max_width }}px;">
        <div class="row align-items-center {{ section.settings.media_align }}">
            <div class="col-lg-6">
                <div class="product-progress-left {% unless section.settings.animation == '' %}animate__animated opacity-0 {{ section.settings.animation_speed }}{% endunless %}"
                    data-animate-class="{{ section.settings.animation }}"
                    style="animation-delay: 400ms;">
                    <!-- Apply text_align_mobile for mobile and text_align_desktop for desktop -->
                    <div class="{{ section.settings.text_align_mobile }} {{ section.settings.text_align_desktop }}"> 
                        {% render 'section-header' %}
                        {% unless section.settings.btn_text == blank %}
                            <div 
                                class="{% unless section.settings.animation == '' %}animate__animated opacity-0 {{ section.settings.animation_speed }}{% endunless %}"
                                data-animate-class="{{ section.settings.animation }}"
                                style="animation-delay: 1000ms;">
                                    <a href="{{ section.settings.btn_url }}" class="btn {{ section.settings.btn_color }} {{ section.settings.btn_size }}">
                                        {{ section.settings.btn_text }}
                                    </a>
                            </div>
                        {% endunless %}
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="product-progress-right">
                    {% for block in section.blocks %}
                        <div class="progress-item">
                            <div class="progress-icon">
                                {% if block.settings.icon != blank %}  
                                    <img 
                                        src="{{ block.settings.icon | img_url: 'master' }}" 
                                        alt="{{ block.settings.icon.alt }}"
                                        width="{{ block.settings.icon.width }}"
                                        height="{{ block.settings.icon.height }}"
                                    >
                                {% endif %}
                            </div>
                            <div class="progress">
                                <div class="progress-bar btn" role="progressbar" style="width: 0%" aria-valuenow="{{ block.settings.count_value }}" aria-valuemin="0" aria-valuemax="1000"></div>
                            </div>  
                            <div class="progress-count-value">
                                <span class="progress-count">0</span> items
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>
        </div>
    </div>
</section>


{% endif %}
<script>
  document.addEventListener("DOMContentLoaded", function() {
    const productProgressSection = document.querySelector('.product-progress');
    if (!productProgressSection) return;

    const progressBars = productProgressSection.querySelectorAll('.progress-bar');
    const progressCounts = productProgressSection.querySelectorAll('.progress-count');

    const animateProgressBar = (bar, targetValue, progressCount) => {
      const targetWidth = targetValue / 10; // Assuming 10 as the factor to calculate width percentage
      let currentWidth = 0;
      let currentCount = 0;
      const incrementWidth = targetWidth / 100; 
      const incrementCount = targetValue / 100;

      const interval = setInterval(() => {
        currentWidth += incrementWidth;
        currentCount += incrementCount;

        if (currentWidth >= targetWidth) {
          clearInterval(interval);
          currentWidth = targetWidth; // Ensure the final width doesn't exceed the target
          currentCount = targetValue; // Ensure the final count matches the target value
        }

        bar.style.width = `${currentWidth}%`;
        progressCount.innerText = Math.round(currentCount);
      }, 10);
    };

    const handleIntersect = (entries, observer) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          progressBars.forEach((bar, index) => {
            const targetValue = parseInt(bar.getAttribute('aria-valuenow'), 10);
            animateProgressBar(bar, targetValue, progressCounts[index]);
          });
          observer.unobserve(entry.target);
        }
      });
    };

    const observer = new IntersectionObserver(handleIntersect, { threshold: 0.5 });
    observer.observe(productProgressSection);
  });
</script>


{% schema %}
{
    "name": "Product progress",
    "settings": [
        {
            "type": "header",
            "content": "General"
        },
        {
            "type": "select",
            "id": "bg_color",
            "label": "Background color",
            "default": "bg-body text-body",
            "options": [
                { "group": "Light", "value": "bg-body text-body", "label": "Body" },
                { "group": "Light", "value": "bg-white text-body", "label": "White" },
                { "group": "Light", "value": "bg-light text-body", "label": "Light" },
                { "group": "Dark", "value": "bg-primary text-white", "label": "Primary" },
                { "group": "Dark", "value": "bg-secondary text-white", "label": "Secondary" },
                { "group": "Dark", "value": "bg-dark text-white", "label": "Dark" },
                { "group": "Alert", "value": "bg-success text-white", "label": "Success" },
                { "group": "Alert", "value": "bg-warning text-white", "label": "Warning" },
                { "group": "Alert", "value": "bg-danger text-white", "label": "Danger" },
                { "group": "Alert", "value": "bg-info text-white", "label": "Info" },
              { "group": "Dark", "value": "bg-brand-gradient text-white", "label": "Brand gradient" }
            ]
        },
       {
            "type": "select",
            "id": "media_align",
            "label": "Media alignment",
            "info": "Note: On mobile Media will always be on top and text on the bottom",
            "default": "flex-row",
            "options": [
                { "value": "flex-row", "label": "Left" },
                { "value": "flex-row-reverse", "label": "Right" }
            ]
        },
      
        {
            "type": "checkbox",
            "id": "bg_gradient",
            "label": "Background gradient",
            "default": false,
            "info": "Will not apply to light colors"
        },
        {
            "type": "select",
            "id": "container",
            "label": "Container",
            "default": "container",
            "options": [
                { "value": "container", "label": "Container" },
                { "value": "container-fluid", "label": "Fluid" }
            ]
        },
        {
            "type": "text",
            "id": "max_width",
            "label": "Max-width (px)"
        },
        {
            "type": "header",
            "content": "Header"
        },
        
       {
            "type": "select",
            "id": "text_align_mobile",
            "label": "Text align - mobile",
            "default": "text-start",
            "options": [
                { "value": "text-start", "label": "Left" },
                { "value": "text-center", "label": "Center" }
            ]
        },
       {
            "type": "select",
            "id": "text_align_desktop",
            "label": "Text align - desktop",
            "default": "text-lg-start",
            "options": [
                { "value": "text-lg-start", "label": "Left" },
                { "value": "text-lg-center", "label": "Center" }
            ]
        },

        {
            "type": "text",
            "id": "title",
            "label": "Title",
            "default": "Title"
        },
        {
            "type": "range",
            "id": "title_font_size_mobile",
            "label": "Title font-size | mobile",
            "min": 1,
            "max": 12,
            "default": 6
        },
        {
            "type": "range",
            "id": "title_font_size_desktop",
            "label": "Title font-size | desktop",
            "min": 1,
            "max": 12,
            "default": 8
        },
        {
            "type": "richtext",
            "id": "description",
            "label": "Description (optional)",
            "default": "<p>Add on optional description to this section</p>"
        },
        {
            "type": "range",
            "id": "description_font_size_mobile",
            "label": "Description font-size | mobile",
            "min": 1,
            "max": 12,
            "default": 2
        },
        {
            "type": "range",
            "id": "description_font_size_desktop",
            "label": "Description font-size | desktop",
            "min": 1,
            "max": 12,
            "default": 2
        },
       {
            "type": "header",
            "content": "Button"
        },
        {
            "type": "text",
            "id": "btn_text",
            "label": "Button text",
            "info": "Leave empty to disable"
        },
        {
            "type": "url",
            "id": "btn_url",
            "label": "Button URL"
        },
        {
            "type": "select",
            "id": "btn_color",
            "label": "Button color",
            "default": "btn-outline-primary",
            "options": [
                { "group": "Normal", "value": "btn-link", "label": "Link" },
                { "group": "Normal", "value": "btn-light", "label": "Light" },
                { "group": "Normal", "value": "btn-dark", "label": "Dark" },
                { "group": "Normal", "value": "btn-primary", "label": "Primary" },
                { "group": "Normal", "value": "btn-secondary", "label": "Secondary" },
                { "group": "Normal", "value": "btn-success", "label": "Success" },
                { "group": "Normal", "value": "btn-danger", "label": "Danger" },
                { "group": "Normal", "value": "btn-warning", "label": "Warning" },
                { "group": "Normal", "value": "btn-info", "label": "Info" },
                { "group": "Outline", "value": "btn-outline-light", "label": "Light Outline" },
                { "group": "Outline", "value": "btn-outline-dark", "label": "Dark Outline" },
                { "group": "Outline", "value": "btn-outline-primary", "label": "Primary Outline" },
                { "group": "Outline", "value": "btn-outline-secondary", "label": "Secondary Outline" },
                { "group": "Outline", "value": "btn-outline-success", "label": "Success Outline" },
                { "group": "Outline", "value": "btn-outline-danger", "label": "Danger Outline" },
                { "group": "Outline", "value": "btn-outline-warning", "label": "Warning Outline" },
                { "group": "Outline", "value": "btn-outline-info", "label": "Info Outline" }
            ]
        },
        {
            "type": "select",
            "id": "btn_size",
            "label": "Button size",
            "default": "",
            "options": [
                { "value": "btn-sm", "label": "Small" },
                { "value": "", "label": "Normal" },
                { "value": "btn-lg", "label": "Large" }
            ]
        },
        {
            "type": "select",
            "id": "animation",
            "label": "Animation",
            "default": "animate__fadeInUp",
            "options": [
                { "group": "Disabled", "value": "", "label": "No animation" },
                { "group": "Fade", "value": "animate__fadeIn", "label": "Fade In" },
                { "group": "Fade", "value": "animate__fadeInDown", "label": "Fade-in-down" },
                { "group": "Fade", "value": "animate__fadeInLeft", "label": "Fade-in-left" },
                { "group": "Fade", "value": "animate__fadeInRight", "label": "Fade-in-right" },
                { "group": "Fade", "value": "animate__fadeInUp", "label": "Fade-in-up" },
                { "group": "Zoom", "value": "animate__zoomIn", "label": "Zoom-in" },
                { "group": "Zoom", "value": "animate__zoomInDown", "label": "Zoom-in-down" },
                { "group": "Zoom", "value": "animate__zoomInLeft", "label": "Zoom-in-left" },
                { "group": "Zoom", "value": "animate__zoomInRight", "label": "Zoom-in-right" },
                { "group": "Zoom", "value": "animate__zoomInUp", "label": "Zoom-in-up" },
                { "group": "Back", "value": "animate__backInDown", "label": "Back-in-down" },
                { "group": "Back", "value": "animate__backInLeft", "label": "Back-in-left" },
                { "group": "Back", "value": "animate__backInRight", "label": "Back-in-right" },
                { "group": "Back", "value": "animate__backInUp", "label": "Back-in-up" },
                { "group": "Bounce", "value": "animate__bounceIn", "label": "Bounce-in" },
                { "group": "Bounce", "value": "animate__bounceInDown", "label": "Bounce-in-down" },
                { "group": "Bounce", "value": "animate__bounceInLeft", "label": "Bounce-in-left" },
                { "group": "Bounce", "value": "animate__bounceInRight", "label": "Bounce-in-right" },
                { "group": "Bounce", "value": "animate__bounceInUp", "label": "Bounce-in-up" },
                { "group": "LightSpeed", "value": "animate__lightSpeedInLeft", "label": "LightSpeed-in-left" },
                { "group": "LightSpeed", "value": "animate__lightSpeedInRight", "label": "LightSpeed-in-right" }
            ]
        },
        {
            "type": "select",
            "id": "animation_speed",
            "label": "Animation speed",
            "default": "animate__fast",
            "options": [
                { "value": "animate__slower", "label": "Slower" },
                { "value": "animate__slow", "label": "Slow" },
                { "value": "", "label": "Normal" },
                { "value": "animate__fast", "label": "Fast" },
                { "value": "animate__faster", "label": "Faster" }
            ]
        }, 
        {
            "type": "header",
            "content": "Spacing"
        },
        {
            "type": "range",
            "id": "pt",
            "label": "Padding top",
            "min": 0,
            "max": 20,
            "step": 1,
            "default": 0
        },
        {
            "type": "range",
            "id": "pb",
            "label": "Padding bottom",
            "min": 0,
            "max": 20,
            "step": 1,
            "default": 0
        },
        {
            "type": "range",
            "id": "mt",
            "label": "Margin top",
            "min": 0,
            "max": 20,
            "step": 1,
            "default": 0
        },
      {
            "type": "range",
            "id": "mb",
            "label": "Margin bottom",
            "min": 0,
            "max": 12,
            "step": 1,
            "default": 0
        },
      {
            "type": "checkbox",
            "id": "access_guests",
            "label": "Guests",
            "default": true
        },
        {
            "type": "checkbox",
            "id": "access_members",
            "label": "Members",
            "default": true
        }
    ],
    "blocks": [
    {
      "type": "progress_item",
      "name": "Progress item",
      "limit": 5,
      "settings": [
                {
                    "type": "image_picker",
                    "id": "icon",
                    "label": "Ivon"
                },
                {
                    "type": "text",
                    "id": "count_value",
                    "label": "Count value"
                }
                
            ]
        }
        
    ],
    "presets": [
        {
            "name": "Product progress",
            "category": "Image"
        }
    ]
}
{% endschema %}